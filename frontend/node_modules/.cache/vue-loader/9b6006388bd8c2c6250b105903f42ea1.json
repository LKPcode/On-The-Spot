{"remainingRequest":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/SellComp.vue?vue&type=style&index=0&id=52711d9e&scoped=true&lang=css&","dependencies":[{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/SellComp.vue","mtime":1644286258285},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaXRlbS10by1idXl7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE2MywgMTYzLCAxNjMpOwogIGJveC1zaGFkb3c6IG5vbmU7Cn0KLmNvaW4tcGVyY2VudC1zbGlkZXJ7CiAgcG9zaXRpb246cmVsYXRpdmU7CiAgcmlnaHQ6IC0xMHB4OwogIHdpZHRoOiAxMDBweDsKICBoZWlnaHQ6IDEwMHB4Owp9Cg=="},{"version":3,"sources":["SellComp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SellComp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<fragment>\n  <div class=\"card left-card\">\n        <div class=\"card-heading\">\n         <h3 class=\"card-title\">Sell</h3>\n        \n        </div>  \n        <div class=\"card-body\"> \n         \n           <div class=\"item list-item\"\n            @click=\"$store.commit('toggleSellItem', index)\"   \n            v-for=\"(asset, index) in $store.state.wallet_data\" \n            :key=\"asset.asset\" \n            :class=\"{ 'item-selected' : asset.selected == true, 'item-to-buy' : asset.selected_to_buy == true, }\"\n           >\n             <div class=\"item-column\"> {{index}} </div>\n            <img class=\"logo scale-up-center\" :src=\"$server + '/static/'+ asset.asset.toLowerCase()  +  '.svg'\" alt=\"\">\n            <div class=\"text\" >\n              <div class=\"coin-ticker\" >{{asset.asset}}</div>\n              <div class=\"coin-price\" >${{$number(asset.coin_price)}}</div>\n             </div>\n            <div class=\"item-column\"> {{$number(asset.percentage)}}%</div>\n            <div class=\"item-column\"> {{$number(asset.total)}} {{asset.asset}}</div>\n\n            <div class=\"item-column \"   >${{ $number(asset.usd_value)}}</div> <!-- style=\"filter: blur(4px);\" -->\n           <div class=\"item-column green\">12%</div>\n           <div class=\"item-column\"> {{$number(asset.amount_to_sell)}}  </div>\n           <div class=\"item-column\"> {{$number(asset.percentage_to_sell)}}% </div>\n           <!-- <div class=\"item-column \" style=\"justify-item:flex-end\"> &#10095; </div> -->\n\n            <div class=\"item-column slidecontainer\">\n              <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"item-slider\" id=\"myRange\">\n            </div>\n\n            <!-- <vue-slider class=\"coin-percent-slider\" \n                        v-model=\"values\"\n                        :direction=\"'btt'\"\n                        :width=\"10\"\n                       \n                         /> -->\n \n           </div>\n          </div> \n         \n      </div>\n\n      <general-slider class=\"general-slider\"/>\n\n\n\n </fragment>\n\n\n</template>\n\n<script>\nimport GeneralSlider from './GeneralSlider.vue'\n// import VueSlider from 'vue-slider-component'\n\nexport default {\n  components: { GeneralSlider  },\n  props: [],\n  data(){\n    return{\n      values:0 //this.$store.state.wallet_data.map(()=>0)\n\n    }\n  },\n  methods:{\n    setPercentageOfSellAsset(index, value){\n     this.$store.commit(\"setPercentageOfSellAsset\", index, value)\n    }\n  },\n  computed:{\n  \n  }\n  \n\n\n}\n</script>\n\n<style scoped>\n.item-to-buy{\n  background-color: rgb(163, 163, 163);\n  box-shadow: none;\n}\n.coin-percent-slider{\n  position:relative;\n  right: -10px;\n  width: 100px;\n  height: 100px;\n}\n</style>"]}]}