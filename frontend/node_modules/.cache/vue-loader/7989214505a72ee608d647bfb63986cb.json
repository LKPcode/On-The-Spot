{"remainingRequest":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/MultiSlider.vue?vue&type=style&index=0&id=555c9c7a&scoped=true&lang=css&","dependencies":[{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/MultiSlider.vue","mtime":1643764018442},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tZXJnZS10b29sdGlwIHsKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICByaWdodDogMzBweDsKICAgICAgdG9wOiA1MCU7CiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDE1cHgsIC01MCUpOwogICAgfQoKLm1lcmdlLXRvb2x0aXAtcGVyY2VudGFnZSB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgcmlnaHQ6IC0yNXB4OwogICAgICB0b3A6IDUwJTsKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTVweCwgLTUwJSk7Cn0KCiAgCg=="},{"version":3,"sources":["MultiSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"MultiSlider.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"slider\" >\n    <vue-slider \n               v-model=\"value\"\n               :order=\"true\"\n               :process=\"process\"\n               :tooltip-formatter=\"formatter\"\n               :enable-cross=\"true\"\n               :tooltip=\"'always'\"    \n               :direction=\"'ttb'\"\n               :height=\"'500px'\"\n               :width=\"5\"\n              \n    >\n    <template v-slot:process=\"{ style, index}\">\n          <div class=\"vue-slider-process\" :style=\"style\">\n            <div :class=\"[\n              'merge-tooltip',\n            ]\">\n              <!-- {{ value[index] }} - {{ value[index + 1] }} -->\n              <img class=\"logo scale-up-center\" :src='\"../../public/\" +  coins[index] + \".svg\"' style=\"width:30px;\" >\n            </div>\n          </div>\n\n         <div class=\"vue-slider-process\" :style=\"style\">\n            <div :class=\"[\n              'merge-tooltip-percentage',\n            ]\">\n          \n            <div v-if=\"isNaN(value[index - 1])\" >\n              {{ value[index] }}%\n            </div>\n            <div v-else-if=\"isNaN(value[index ])\">\n               {{ 100 - value[index -1] }}%\n            </div>\n            <div v-else>\n               {{ value[index] -  value[index - 1] }}%\n            </div>\n              \n              \n            </div>\n          </div>\n\n        </template>\n     <template #tooltip=\"{ index }\">\n        <div v-if=\"index === 1\">\n          <!-- <img src=\"../../public/aave.svg\" style=\"width:30px;\" > -->\n          </div>\n        <div v-else></div>\n      </template>\n    \n    </vue-slider>\n  </div>\n</template>\n\n<script>\nimport VueSlider from 'vue-slider-component'\nimport 'vue-slider-component/theme/default.css'\n\n\n\nexport default {\n  name: 'MultiSlider',\n  components: {\n    VueSlider\n  },\n   data: function () {\n      return {\n        value: [25, 50, 75],\n        formatter: '{value}%',\n         process: dotsPos => [\n          [0, dotsPos[0], { backgroundColor: 'gray' }],\n          [dotsPos[0], dotsPos[1], { backgroundColor: 'black' }],\n          [dotsPos[1], dotsPos[2], { backgroundColor: 'gray' }],\n          [dotsPos[2], 100, { backgroundColor: 'black' }],\n        ],\n        coins: [\"btc\",\"matic\",\"ada\", \"eth\"]\n      }\n   }\n \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.merge-tooltip {\n      position: absolute;\n      right: 30px;\n      top: 50%;\n      transform: translate(15px, -50%);\n    }\n\n.merge-tooltip-percentage {\n      position: absolute;\n      right: -25px;\n      top: 50%;\n      transform: translate(15px, -50%);\n}\n\n  \n</style>\n"]}]}