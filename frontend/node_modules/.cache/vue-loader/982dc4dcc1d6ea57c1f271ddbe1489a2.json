{"remainingRequest":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/MultiSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/MultiSlider.vue","mtime":1644802985653},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVTbGlkZXIgZnJvbSAndnVlLXNsaWRlci1jb21wb25lbnQnCmltcG9ydCAndnVlLXNsaWRlci1jb21wb25lbnQvdGhlbWUvZGVmYXVsdC5jc3MnCmltcG9ydCB7IGRlYm91bmNlIH0gZnJvbSAiZGVib3VuY2UiOwoKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ011bHRpU2xpZGVyJywKICBjb21wb25lbnRzOiB7CiAgICBWdWVTbGlkZXIKICB9LAogICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdG9nZ2xlOiB0cnVlLAogICAgICAgIHRvZ2dsZV9hbW91bnQ6IHRydWUsCiAgICAgICAgdmFsdWU6IFs1MF0sCiAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSUnLAogICAgICAgIAogICAgICAgIGNvaW5zOiBbXQogICAgICB9CiAgICAgCgogICAgICB9LCAKICAgICAgY3JlYXRlZCgpewogICAgICAgIHRoaXMuJHJvb3QuJG9uKCdzd2FwQnV0dG9uQ2xpY2tlZCcsICgpID0+IHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRBbW91bnRUb0J1eU9mQ29pbnMiLCB7IHZhbHVlOiB0aGlzLnZhbHVlLCBjb2luczogdGhpcy5jb2lucyB9KQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIG1ldGhvZHM6IHsKICAgICAgICBwcm9jZXNzZXM6IGZ1bmN0aW9uKGRvdHNQb3MpewogICAgICAgICAgbGV0IHByb2Nlc3NlcyA9IFtdCiAgICAgICAgICAKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpICYmIHRoaXMudmFsdWUubGVuZ3RoID49IDIpewogICAgICAgICAgICAgIHByb2Nlc3Nlcy5wdXNoKFswLCBkb3RzUG9zWzBdLCB7IGJhY2tncm91bmRDb2xvcjogJ2dyYXknIH1dKQogICAgICAgICAgICAgIGZvcihsZXQgaT0wOyBpIDwgdGhpcy52YWx1ZS5sZW5ndGggLSAxOyBpKyspeyAgCiAgICAgICAgICAgICAgICBwcm9jZXNzZXMucHVzaChbZG90c1Bvc1tpXSwgZG90c1Bvc1tpKzFdLCB7IGJhY2tncm91bmRDb2xvcjogaSUyPT0wPyAndmFyKC0tbWFpbi1jb2xvciknIDogImdyYXkiIH1dKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBwcm9jZXNzZXMucHVzaChbZG90c1Bvc1t0aGlzLnZhbHVlLmxlbmd0aCAtIDFdLCAxMDAsIHsgYmFja2dyb3VuZENvbG9yOiB0aGlzLnZhbHVlLmxlbmd0aCUyIT0wPyAndmFyKC0tbWFpbi1jb2xvciknIDogImdyYXkiIH1dKSAKICAgICAgICAgIH0KICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICBwcm9jZXNzZXMucHVzaChbMCwgZG90c1Bvc1swXSwgeyBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5JyB9XSkKICAgICAgICAgICAgIHByb2Nlc3Nlcy5wdXNoKFtkb3RzUG9zWzBdLDEwMCwgeyBiYWNrZ3JvdW5kQ29sb3I6ICd2YXIoLS1tYWluLWNvbG9yKSd9XSkKICAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIHByb2Nlc3NlcwogICAgICAgIH0sCiAgICAgICAgdG9nZ2xlX2Z1bmMoKXsKICAgICAgICAgIHRoaXMudG9nZ2xlID0gIXRoaXMudG9nZ2xlCiAgICAgICAgfSwKICAgICAgICB0b2dnbGVfZnVuY19hbW91bnQoKXsKICAgICAgICAgIHRoaXMudG9nZ2xlX2Ftb3VudCA9ICF0aGlzLnRvZ2dsZV9hbW91bnQKICAgICAgICB9LAogICAgICAgCiAgICAgICAKICAgICAgfSwKICAgICAgLy8gICBjb21wdXRlZDp7CiAgICAgIC8vICAgICBzZWxsX2Ftb3VudDogZnVuY3Rpb24oKXsKICAgICAgLy8gICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLndhbGxldF9kYXRhLmZpbHRlcihhc3NldCA9PiBhc3NldC5zZWxlY3RlZCA9PSB0cnVlKS5yZWR1Y2UoKHByZXYsIGN1cikgPT4geyByZXR1cm4gcHJldiArICBjdXIudXNkX3ZhbHVlICogdmFsdWUgLyAxMDAgIH0gLDApCiAgICAgICAgICAKICAgICAgLy8gICAgIH0KICAgICAgLy8gICB9LAogICAgICAgIHdhdGNoOnsKICAgICAgICAgCiAgICAgICAgICAiJHN0b3JlLnN0YXRlLndhbGxldF9kYXRhIjogZGVib3VuY2UoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIGxldCBzZWxlY3RlZF9hc3NldHMgPSB0aGlzLiRzdG9yZS5zdGF0ZS53YWxsZXRfZGF0YS5maWx0ZXIoYXNzZXQgPT4gYXNzZXQuc2VsZWN0ZWRfdG9fYnV5ID09IHRydWUgJiYgYXNzZXQuc2VsZWN0ZWQgIT0gdHJ1ZSApCgogICAgICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUud2FsbGV0X2RhdGEuZmlsdGVyKGFzc2V0ID0+IGFzc2V0LnNlbGVjdGVkX3RvX2J1eSA9PSB0cnVlKS5tYXAoKGFzc2V0LCBpbmRleCk9PiAyMCAqIGluZGV4KSkKICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBzZWxlY3RlZF9hc3NldHMubWFwKChhc3NldCAsaW5kZXgpID0+ICgoMTAwIC8gKHNlbGVjdGVkX2Fzc2V0cy5sZW5ndGgpKSAqIChpbmRleCArMSkpLnRvRml4ZWQoMCkpCiAgICAgICAgICAgICAgY29uc29sZS5sb2codmFsdWUpCiAgICAgICAgICAgICAgdmFsdWUucG9wKCkKICAgICAgICAgICAgICB0aGlzLmNvaW5zID0gc2VsZWN0ZWRfYXNzZXRzLm1hcCgoYXNzZXQpID0+IGFzc2V0LmFzc2V0LnRvTG93ZXJDYXNlKCkpCiAgICAgICAgICAgICAgLy90aGlzLm9uQ2hhbmdlKHZhbHVlLCB0aGlzLmNvaW5zKQoKICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiAodmFsdWUubGVuZ3RoID09IDAgfHwgdmFsdWUubGVuZ3RoID09IDEpICl7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuc2xpZGVyLnNldFZhbHVlKFs1MF0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLnNsaWRlci5zZXRWYWx1ZSh2YWx1ZSkKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICB9LCAyMCkKICAgICAgICB9CiAgCiAKfQo="},{"version":3,"sources":["MultiSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA","file":"MultiSlider.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div  >\n    <vue-slider\n               class=\"slider\" \n               :class='{\"show-slider\": this.$store.state.wallet_data.filter(asset => asset.selected_to_buy == true).length >= 2 }'\n               ref=\"slider\"\n               v-model=\"value\"\n               :order=\"true\"\n               :process=\"processes\"\n               :tooltip-formatter=\"formatter\"\n               :enable-cross=\"true\"\n               :tooltip=\"'always'\"    \n               :direction=\"'ttb'\"\n               :height=\"'90%'\"\n               :width=\"10\"\n               :contained=\"false\"\n              \n              \n               \n              \n              \n    >\n    <template v-slot:process=\"{ style, index}\">\n          <div class=\"vue-slider-process\" :style=\"style\">\n            <div :class=\"[\n              'merge-tooltip',\n            ]\">\n              <!-- {{ value[index] }} - {{ value[index + 1] }} -->\n              <img class=\"logo scale-up-center\" :src=\"$server + '/static/'+ coins[index]  +  '.svg'\" style=\"width:30px;\" >\n            </div>\n          </div>\n\n         <div class=\"vue-slider-process\" :style=\"style\">\n            <div :class=\"[\n              'merge-tooltip-percentage',\n            ]\" >\n            <div class=\"tooltips\">\n            <!-- Percentage -->\n            <div v-if=\"!Array.isArray(value)\">\n                  {{toggle_func()}}\n                  <div v-if=\"toggle==true\">  {{100 -value}}%</div>\n                   <div v-else>  {{ value}}%</div>\n               \n            </div>\n            <div v-else-if=\"isNaN(value[index - 1])\" >\n              {{ value[index] }}%\n            </div>\n            <div v-else-if=\"isNaN(value[index ])\">\n               {{ 100 - value[index -1] }}%\n            </div>\n            \n            <div v-else>\n               {{ value[index] -  value[index - 1] }}%\n            </div>\n             </div>  \n          \n            \n            <!-- Amount -->\n             <div class=\"tooltips\">\n            <div v-if=\"!Array.isArray(value)\">\n                  {{toggle_func_amount()}}\n                  <div v-if=\"toggle==true\">  ${{ $number($store.state.sell_amount - $store.state.sell_amount * value / 100) }} </div>\n                   <div v-else>  ${{ $number($store.state.sell_amount * value / 100 )}} </div>\n               \n            </div>\n            <div v-else-if=\"isNaN(value[index - 1])\" >\n              ${{ $number( value[index] /100  * $store.state.sell_amount) }}\n              <!-- {{$store.state.sell_amount * value[index] /100}} -->\n            </div>\n            <div v-else-if=\"isNaN(value[index ])\">\n               ${{ $number( $store.state.sell_amount  - value[index-1] /100  * $store.state.sell_amount ) }}\n            </div>\n            \n            <div v-else>\n               ${{ $number( value[index] /100  * $store.state.sell_amount -  value[index-1] /100  * $store.state.sell_amount ) }}\n            </div>\n            <!-- <div class=\"tooltip-right\">\n              {{$number($store.state.sell_amount * value / 100)}}\n            </div> -->\n             </div>\n              </div>\n          </div>\n\n        </template>\n     <template #tooltip=\"{ index }\">\n        <div v-if=\"index === 1\">\n          <!-- <img src=\"../../public/aave.svg\" style=\"width:30px;\" > -->\n          </div>\n        <div v-else></div>\n      </template>\n    \n    </vue-slider>\n  \n  </div>\n</template>\n\n<script>\nimport VueSlider from 'vue-slider-component'\nimport 'vue-slider-component/theme/default.css'\nimport { debounce } from \"debounce\";\n\n\n\nexport default {\n  name: 'MultiSlider',\n  components: {\n    VueSlider\n  },\n   data: function () {\n      return {\n        toggle: true,\n        toggle_amount: true,\n        value: [50],\n        formatter: '{value}%',\n        \n        coins: []\n      }\n     \n\n      }, \n      created(){\n        this.$root.$on('swapButtonClicked', () => {\n            this.$store.commit(\"setAmountToBuyOfCoins\", { value: this.value, coins: this.coins })\n        })\n      },\n      methods: {\n        processes: function(dotsPos){\n          let processes = []\n          \n          if (Array.isArray(this.value) && this.value.length >= 2){\n              processes.push([0, dotsPos[0], { backgroundColor: 'gray' }])\n              for(let i=0; i < this.value.length - 1; i++){  \n                processes.push([dotsPos[i], dotsPos[i+1], { backgroundColor: i%2==0? 'var(--main-color)' : \"gray\" }])\n              }\n              processes.push([dotsPos[this.value.length - 1], 100, { backgroundColor: this.value.length%2!=0? 'var(--main-color)' : \"gray\" }]) \n          }\n          else{\n             processes.push([0, dotsPos[0], { backgroundColor: 'gray' }])\n             processes.push([dotsPos[0],100, { backgroundColor: 'var(--main-color)'}])\n             \n          }\n          return processes\n        },\n        toggle_func(){\n          this.toggle = !this.toggle\n        },\n        toggle_func_amount(){\n          this.toggle_amount = !this.toggle_amount\n        },\n       \n       \n      },\n      //   computed:{\n      //     sell_amount: function(){\n      //       return this.$store.state.wallet_data.filter(asset => asset.selected == true).reduce((prev, cur) => { return prev +  cur.usd_value * value / 100  } ,0)\n          \n      //     }\n      //   },\n        watch:{\n         \n          \"$store.state.wallet_data\": debounce(function () {\n              let selected_assets = this.$store.state.wallet_data.filter(asset => asset.selected_to_buy == true && asset.selected != true )\n\n              //console.log(this.$store.state.wallet_data.filter(asset => asset.selected_to_buy == true).map((asset, index)=> 20 * index))\n              let value = selected_assets.map((asset ,index) => ((100 / (selected_assets.length)) * (index +1)).toFixed(0))\n              console.log(value)\n              value.pop()\n              this.coins = selected_assets.map((asset) => asset.asset.toLowerCase())\n              //this.onChange(value, this.coins)\n\n                if (Array.isArray(value) && (value.length == 0 || value.length == 1) ){\n                  this.$refs.slider.setValue([50])\n                }\n                else{\n                  this.$refs.slider.setValue(value)\n                }\n\n          }, 20)\n        }\n  \n \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.merge-tooltip {\n      position: absolute;\n      right: 30px;\n      top: 50%;\n      transform: translate(15px, -50%);\n    }\n\n.merge-tooltip-percentage {\n      position: absolute;\n      right: -25px;\n      top: 50%;\n      transform: translate(15px, -50%);\n}\n.tooltips{\n  margin-top:0.2rem;\n  background-color: aquamarine;\n  position:relative;\n  left: 10px;\n  text-align: center;\n  width: 35px;\n  font-size: 12px;\n  padding: 0.2rem;\n  border-radius: 1rem;\n  background: var(--main-color);\n  color: black;\n\t-webkit-backdrop-filter: blur(5px);\n\tbackdrop-filter: blur(5px);\n  border: 1px solid rgba(255,255,255,0.2);\n}\n\n\n\n</style>\n"]}]}