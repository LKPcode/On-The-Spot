{"remainingRequest":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/src/App.vue","mtime":1645636341151},{"path":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/Projects/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}