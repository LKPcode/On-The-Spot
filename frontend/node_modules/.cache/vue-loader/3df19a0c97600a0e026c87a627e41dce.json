{"remainingRequest":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/GeneralSlider.vue?vue&type=template&id=75dc0769&scoped=true&","dependencies":[{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/src/components/GeneralSlider.vue","mtime":1644726932652},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/spectator/Desktop/spot_trading/glassmorphism/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaWNvbi1saXN0IiB9LAogICAgICAgIFsKICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLndhbGxldF9kYXRhLmZpbHRlcihmdW5jdGlvbiAoYXNzZXQpIHsKICAgICAgICAgICAgcmV0dXJuIGFzc2V0LnNlbGVjdGVkID09IHRydWUKICAgICAgICAgIH0pLmxlbmd0aCA+PSAxCiAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibG9nbyBzY2FsZS11cC1jZW50ZXIiLAogICAgICAgICAgICAgICAgICBjbGFzczogeyAiYXNzZXQtc2VsZWN0ZWQiOiBfdm0uYXNzZXRfY2hvc2VuID09ICJHbG9iYWwiIH0sCiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMzBweCIsICJtYXJnaW4tYm90dG9tIjogIjRweCIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jaG9vc2VBc3NldCgiR2xvYmFsIikKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF92bS5fbCgKICAgICAgICAgICAgX3ZtLiRzdG9yZS5zdGF0ZS53YWxsZXRfZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGFzc2V0KSB7CiAgICAgICAgICAgICAgcmV0dXJuIGFzc2V0LnNlbGVjdGVkID09IHRydWUKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIGZ1bmN0aW9uIChhc3NldCkgewogICAgICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IGFzc2V0LmFzc2V0IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibG9nbyBzY2FsZS11cC1jZW50ZXIiLAogICAgICAgICAgICAgICAgICBjbGFzczogeyAiYXNzZXQtc2VsZWN0ZWQiOiBfdm0uYXNzZXRfY2hvc2VuID09IGFzc2V0LmFzc2V0IH0sCiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMzBweCIgfSwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNlcnZlciArCiAgICAgICAgICAgICAgICAgICAgICAiL3N0YXRpYy8iICsKICAgICAgICAgICAgICAgICAgICAgIGFzc2V0LmFzc2V0LnRvTG93ZXJDYXNlKCkgKwogICAgICAgICAgICAgICAgICAgICAgIi5zdmciLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNob29zZUFzc2V0KGFzc2V0LmFzc2V0KQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBdKQogICAgICAgICAgICB9CiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICAgMgogICAgICApLAogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS53YWxsZXRfZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGFzc2V0KSB7CiAgICAgICAgcmV0dXJuIGFzc2V0LnNlbGVjdGVkID09IHRydWUKICAgICAgfSkubGVuZ3RoID49IDEKICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYXNzZXQtbmFtZSIgfSwgWwogICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5hc3NldF9jaG9zZW4pKSwKICAgICAgICAgIF0pCiAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgX2MoInZ1ZS1zbGlkZXIiLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJzbGlkZXIiLAogICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAic2hvdy1zbGlkZXIiOgogICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS53YWxsZXRfZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGFzc2V0KSB7CiAgICAgICAgICAgICAgcmV0dXJuIGFzc2V0LnNlbGVjdGVkID09IHRydWUKICAgICAgICAgICAgfSkubGVuZ3RoID49IDEsCiAgICAgICAgfSwKICAgICAgICBhdHRyczogewogICAgICAgICAgb3JkZXI6IHRydWUsCiAgICAgICAgICBwcm9jZXNzOiBfdm0ucHJvY2VzcywKICAgICAgICAgICJ0b29sdGlwLWZvcm1hdHRlciI6IF92bS5mb3JtYXR0ZXIsCiAgICAgICAgICAiZW5hYmxlLWNyb3NzIjogdHJ1ZSwKICAgICAgICAgIHRvb2x0aXA6ICJhbHdheXMiLAogICAgICAgICAgZGlyZWN0aW9uOiAiYnR0IiwKICAgICAgICAgIGhlaWdodDogIjQyMHB4IiwKICAgICAgICAgIHdpZHRoOiAxMCwKICAgICAgICAgIGludGVydmFsOiAwLjEsCiAgICAgICAgICBjaGFuZ2U6IF92bS5vbkNoYW5nZShfdm0udmFsdWUpLAogICAgICAgIH0sCiAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbCiAgICAgICAgICB7CiAgICAgICAgICAgIGtleTogInByb2Nlc3MiLAogICAgICAgICAgICBmbjogZnVuY3Rpb24gKHJlZikgewogICAgICAgICAgICAgIHZhciBzdHlsZSA9IHJlZi5zdHlsZQogICAgICAgICAgICAgIHZhciBpbmRleCA9IHJlZi5pbmRleAogICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZ1ZS1zbGlkZXItcHJvY2VzcyIsIHN0eWxlOiBzdHlsZSB9LCBbCiAgICAgICAgICAgICAgICAgIGluZGV4ID09IDAKICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IGNsYXNzOiBbIm1lcmdlLXRvb2x0aXAiXSB9KQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBrZXk6ICJ0b29sdGlwIiwKICAgICAgICAgICAgZm46IGZ1bmN0aW9uIChyZWYpIHsKICAgICAgICAgICAgICB2YXIgdmFsdWUgPSByZWYudmFsdWUKICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0b29sdGlwLWxlZnQiIH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyh2YWx1ZS50b0ZpeGVkKDEpKSArICIlICIpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfdm0uYXNzZXRfY2hvc2VuID09ICJHbG9iYWwiCiAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0b29sdGlwLXJpZ2h0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICIgJCIgKwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kbnVtYmVyKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHN0b3JlLnN0YXRlLndhbGxldF9kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYXNzZXQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhc3NldC5zZWxlY3RlZCA9PSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVkdWNlKGZ1bmN0aW9uIChwcmV2LCBjdXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmV2ICsgKGN1ci51c2RfdmFsdWUgKiB2YWx1ZSkgLyAxMDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICkgKwogICAgICAgICAgICAgICAgICAgICAgICAgICIgIgogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICA6IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidG9vbHRpcC1yaWdodCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiICQiICsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJG51bWJlcigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF92bS4kc3RvcmUuc3RhdGUud2FsbGV0X2RhdGEuZmlsdGVyKGZ1bmN0aW9uICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc3NldAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXNzZXQuYXNzZXQgPT0gX3ZtLmFzc2V0X2Nob3NlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVswXS51c2RfdmFsdWUgKgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlKSAvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgIiAiCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgXSksCiAgICAgICAgbW9kZWw6IHsKICAgICAgICAgIHZhbHVlOiBfdm0udmFsdWUsCiAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKCQkdikgewogICAgICAgICAgICBfdm0udmFsdWUgPSAkJHYKICAgICAgICAgIH0sCiAgICAgICAgICBleHByZXNzaW9uOiAidmFsdWUiLAogICAgICAgIH0sCiAgICAgIH0pLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}